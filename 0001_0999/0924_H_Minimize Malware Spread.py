class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        nodeDict = {}
        for init in initial:
            visit = set([init])
            queue = [init]
            while len(queue) > 0:
                node = queue[0]
                del queue[0]
                for idx, connect in enumerate(graph[node]):
                    if connect == 1 and idx not in visit:
                        visit.add(idx)
                        queue.append(idx)
                        nodeDict[idx] = nodeDict.get(idx, []) + [init]

        # print(nodeDict)

        independent = []
        union = []
        for init in initial:
            if init in nodeDict:
                union.append(init)
            else:
                independent.append(init)

        # print('independent:', independent)
        # print('union:', union)

        if len(independent) > 0:
            result = [0] * len(graph)
            for idx in nodeDict:
                if len(nodeDict[idx]) == 1:
                    init = nodeDict[idx][0]
                    if init in independent:
                        result[init] += 1

            # print('result:', result)

            if max(result) == 0:
                return min(independent)
            return result.index(max(result))
        else:
            return min(union)